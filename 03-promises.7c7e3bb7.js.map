{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC7BC,EAAaF,SAASC,cAAc,kBACrCE,EAAYH,SAASC,cAAc,iBAClCG,EAAcJ,SAASC,cAAc,mBAE5C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAASC,IAElBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAVbR,EAAKgB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAASC,SAASf,EAAYgB,OAC9BC,EAAQF,SAASjB,EAAWkB,OAC5BE,EAAOH,SAAShB,EAAUiB,OAEhC,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAQM,GAAK,EAC9CnB,EAAckB,EAAUF,GAASG,EAAI,GAAKF,GACvCG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAIrDR,EAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form = document.querySelector(\".form\");\nconst  delayInput = document.querySelector(`[name=\"delay\"]`);\nconst stepInput = document.querySelector(`[name=\"step\"]`);\nconst  amountInput = document.querySelector(`[name=\"amount\"]`)\nform.addEventListener(\"submit\", onFormSubmit);\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve({position,delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n   \n  });\n}\n\n \nfunction onFormSubmit(event){\n  event.preventDefault();\n  const amount = parseInt(amountInput.value);\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n\n  for (let position = 1; position <= amount; i += 1) {\n    createPromise(position, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset(); \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","parseInt","value","delay1","step","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.7c7e3bb7.js.map"}