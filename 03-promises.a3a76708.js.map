{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC7BC,EAAaF,SAASC,cAAe,kBACtCE,EAAYH,SAASC,cAAe,iBACnCG,EAAcJ,SAASC,cAAe,mBAE7C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAASS,MAAAR,IAElBG,EAAO,CAACJ,WAAUS,MAAAR,G,GAEnBA,E,IAVPR,EAAKiB,iBAAiB,UAkBtB,SAAgBC,GACdA,EAAMC,iBACN,KAAoB,GAAeC,EAAQC,GAAK,EAC9Cf,EADkB,EACMgB,GAASD,EAAI,GAAKE,GACvCC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALT,MACjBW,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAALT,MAClBW,EAAA7B,GAAS8B,OAAOK,QACd,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAInDhC,EAAKkC,O,IAnBP,IAAMd,EAASe,SAAS9B,EAAY+B,OAC9Bd,EAAQa,SAAShC,EAAWiC,OAC5Bb,EAAOY,SAAS/B,EAAUgC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form = document.querySelector(\".form\");\nconst  delayInput = document.querySelector(`[name=\"delay\"]`);\nconst stepInput = document.querySelector(`[name=\"step\"]`);\nconst  amountInput = document.querySelector(`[name=\"amount\"]`)\nform.addEventListener(\"submit\", launch);\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve({position,delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n   \n  });\n}\nconst amount = parseInt(amountInput.value);\nconst delay = parseInt(delayInput.value);\nconst step = parseInt(stepInput.value);\n \nfunction launch(event){\n  event.preventDefault();\n  for (let position = 1; position <= amount; i += 1) {\n    createPromise(position, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset(); \n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","$ce04d3a99e08e73b$var$amount","i","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","reset","parseInt","value"],"version":3,"file":"03-promises.a3a76708.js.map"}